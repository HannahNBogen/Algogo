version '1.0'

apply plugin: 'java'
sourceCompatibility = 1.8

apply plugin: 'antlr'

dependencies {
    configurations.compile.extendsFrom(configurations.extraLibs)
    extraLibs fileTree(dir: 'libs', include: ['*.jar'])

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'

    extraLibs project(':core')
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.1'

    extraLibs group: 'org.kordamp.ikonli', name: 'ikonli-swing', version: '2.2.0'
    extraLibs group: 'org.kordamp.ikonli', name: 'ikonli-materialdesign-pack', version: '2.2.0'

    extraLibs group: 'com.jtattoo', name: 'JTattoo', version: '1.6.11'

    extraLibs group: 'com.goebl', name: 'david-webb', version: '1.3.0'
    extraLibs group: 'org.json', name: 'json', version: '20180130'

    extraLibs group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.6.1'
    extraLibs group: 'com.fifesoft', name: 'autocomplete', version: '2.6.1'
    extraLibs group: 'com.fifesoft', name: 'spellchecker', version: '2.6.0'
}

generateGrammarSource {
    arguments += ['-long-messages']
}

jar {
    manifest {
        attributes 'Main-Class': 'xyz.algogo.desktop.AlgogoDesktop'
    }

    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task(runMain, dependsOn: 'classes', type: JavaExec) {
    main = 'xyz.algogo.desktop.AlgogoDesktop'
    classpath = sourceSets.main.runtimeClasspath
}